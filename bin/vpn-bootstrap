#!/usr/bin/env bash

################################################################################
#
# Author:   Gleb E. Goncharov <inbox@gongled.ru>
# Version:  1.1
# License:  MIT
#
################################################################################

PROJECT_NAME="vpn-bootstrap"
PROJECT_PATH="/var/tmp/$PROJECT_NAME"
PROJECT_CONF_PATH="$PROJECT_PATH/config.json"

DEPS="openssl ansible pwgen"

################################################################################

NORMAL=0
BOLD=1
UNDERLINE=4
RED=31
GREEN=32
BROWN=33
BLUE=34
MAGENTO=35
CYAN=36
GREY=37

################################################################################

SEPARATOR="\n*******************************************************************************\n"

################################################################################

main() {
  prepare

  local username="$1"

  if [[ -z "$username" ]] ; then
    username=$(pwgen -01AB 8)
  fi

  ############################################################################

  rm -rf "$PROJECT_PATH/" &> /dev/null

  curl -sL https://raw.githubusercontent.com/gongled/vpn-bootstrap/master/bin/vpn-preconf | bash -s

  ############################################################################

  show "$SEPARATOR" $GREY

  show "Generate credentials..."

  local password=$(pwgen -s1Bv 16)
  local ipsecpsk=$(openssl rand -hex 16)
  local public_ip=$(ifconfig eth0 | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}')

  show "Patching config..."

  sed -i 's/%USERNAME%/'$username'/g'        "$PROJECT_CONF_PATH" &> /dev/null
  sed -i 's/%PASSWORD%/'$local $password'/g' "$PROJECT_CONF_PATH" &> /dev/null
  sed -i 's/%IPSECPSK%/'$ipsecpsk'/g'        "$PROJECT_CONF_PATH" &> /dev/null
  sed -i 's/%REMOTEIP%/'$public_ip'/g'       "$PROJECT_CONF_PATH" &> /dev/null

  pushd "$PROJECT_PATH" &> /dev/null

  ############################################################################

  show "Running ansible..."

  show "$SEPARATOR" $GREY

  ansible-playbook install.yml -c local -e @"$PROJECT_CONF_PATH"

  show "$SEPARATOR" $GREY

  show "Installation has been completed!" $GREEN

  show "$SEPARATOR" $GREY

  ############################################################################

  show "Protocol ....................... IPSec/L2TP"
  show "IP address ..................... $public_ip"

  show "Username ....................... $username"
  show "Password ....................... $password"
  show "IPSec pre-shared key ........... $ipsecpsk"

  show "$SEPARATOR" $GREY

  popd &> /dev/null
}

prepare() {
  if ! isRoot ; then
    exit 1
  fi

  if ! checkDeps $DEPS ; then
    show "Install $DEPS packages before this script usage" $RED
    exit 1
  fi
}

################################################################################

show() {
  if [[ -n "$2" && -z "$no_colors" ]] ; then
    echo -e "\e[${2}m${1}\e[0m"
  else
    echo -e "$1"
  fi
}

isRoot() {
  if [[ "$(id -u)" != "0" ]] ; then
    show "Error: this script must be run as root" $RED
    return 1
  fi

  return 0
}

checkDeps () {
  for app in $@ ; do
    type -P $app &> /dev/null
    [[ $? -eq 1 ]] && return 1
  done

  return 0
}

################################################################################

main $@
